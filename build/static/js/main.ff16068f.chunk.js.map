{"version":3,"sources":["TodoList/ListItem.js","TodoList/Form.js","TodoList/TodoList.js","Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","todo","name","done","style","textDecoration","Button","variant","onClick","completed","uncompleted","remove","Form","onSubmit","paddingLeft","marginTop","type","value","onChange","placeholder","tasks","TodoApp","useState","todos","setTodos","inputValue","setInputValue","useEffect","count","map","document","title","_handleBntClick","index","newArr","slice","splice","e","preventDefault","alert","target","console","log","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","token","className","Group","controlId","Label","App","path","TodoList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ff16068f.chunk.js","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Button from 'react-bootstrap/Button';\n\n\nexport default function ListItem(props) {\n  const { name, done } = props.todo;\n  return (\n    <li style={{ textDecoration: done ? \"line-through\" : \"\" }}>\n      {name}\n      {!done ? <Button  variant=\"success\" onClick={props.completed}>Completed</Button> : \"\"}\n      {done ? <Button variant=\"warning\" onClick={props.uncompleted}>uncompleted</Button> : \"\"}\n\n      <Button variant=\"danger\" onClick={props.remove} >Remove</Button>\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default function Form(props) {\n  return (\n    <form onSubmit={props.onSubmit} style={{ paddingLeft: 40, marginTop: 16 }}>\n      <input\n        type=\"text\"\n        value={props.value}\n        onChange={props.onChange}\n        placeholder=\"Ex.: meeting at 4:20\"\n      />\n      <button  type=\"submit\"   >Add ToDo</button>\n    </form>\n  );\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport \"./Todo.css\"\n\n\nimport ListItem from \"./ListItem\";\nimport Form from \"./Form\";\n\n//Initial tasks\nconst tasks = [\n  { name: \"task 1\", done: false },\n  { name: \"task 2\", done: false },\n  { name: \"task 3\", done: true }\n];\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState(tasks);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  //useEffect works basically as componentDidMount and componentDidUpdate\n  useEffect(() => {\n    let count = 0;\n    todos.map((todo) => (!todo.done ? count++ : null));\n    document.title = `${count} task${count > 1 ? \"s\" : \"\"} todo`;\n  });\n\n  //\n  const _handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue === \"\") return alert(\"Task name is required\");\n\n    const newArr = todos.slice();\n    newArr.splice(0, 0, { name: inputValue, done: false });\n    setTodos(newArr);\n    setInputValue(\"\");\n  };\n\n  //\n  const _handleBntClick = ({ type, index }) => {\n    const newArr = todos.slice();\n    if (type === \"remove\") {\n      newArr.splice(index, 1);\n    } else if (type === \"completed\") {\n      newArr[index].done = true;\n    } else if (type === \"uncompleted\") newArr[index].done = false;\n\n    return setTodos(newArr);\n  };\n\n  //\n  return (\n    <Fragment>\n\n      <Form\n        onSubmit={_handleSubmit}\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <ul>\n        {todos.map((todo, index) => (\n          <ListItem\n            key={index}\n            todo={todo}\n            remove={() => _handleBntClick({ type: \"remove\", index })}\n            completed={() => {\n              console.log(index);\n              return _handleBntClick({ type: \"completed\", index });\n            }}\n            uncompleted={() => _handleBntClick({ type: \"uncompleted\", index })}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n\nexport default TodoApp;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\nimport './Login.css';\nasync function loginUser(credentials) {\n    return fetch('/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(data => data.json())\n   }\n\nexport default function Login({ setToken }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  }\n  return(\n    <div className=\"login-wrapper\">\n      <h1>Please Log In</h1>\n      \n      <Form onSubmit={handleSubmit}>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Username</Form.Label>\n    <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\n    </Form.Group>\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\n  </Form.Group>\n \n  <Button className='btn' variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport './App.css';\nimport TodoList from './TodoList/TodoList';\nimport Login from './Login/Login';\n\n\n\n\nfunction App() {\n  const [token, setToken] = useState();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Application</h1>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\">\n            <TodoList />\n          </Route>\n          <Route path=\"/Login\">\n            <Login />\n          </Route>\n         \n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}